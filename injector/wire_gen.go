// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"database/sql"
	"github.com/FeiraVed/todolist/app"
	"github.com/FeiraVed/todolist/controller"
	"github.com/FeiraVed/todolist/repository"
	"github.com/FeiraVed/todolist/service"
	"github.com/go-playground/validator/v10"
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializedService(db *sql.DB, validate *validator.Validate) *service.TodolistServiceImpl {
	todolistRepositoryImpl := repository.New()
	todolistServiceImpl := service.NewTodolistServiceImpl(todolistRepositoryImpl, db, validate)
	return todolistServiceImpl
}

func InitializedServer() *fiber.App {
	todolistRepositoryImpl := repository.New()
	db := app.NewDb()
	validate := validator.New()
	todolistServiceImpl := service.NewTodolistServiceImpl(todolistRepositoryImpl, db, validate)
	todolistControllerImpl := controller.NewTodolistControllerImpl(todolistServiceImpl)
	fiberApp := app.NewRouter(todolistControllerImpl)
	return fiberApp
}

// injector.go:

var todolistSet = wire.NewSet(repository.New, wire.Bind(new(repository.TodolistRepository), new(*repository.TodolistRepositoryImpl)), service.NewTodolistServiceImpl, wire.Bind(new(service.TodolistService), new(*service.TodolistServiceImpl)), controller.NewTodolistControllerImpl, wire.Bind(new(controller.TodolistController), new(*controller.TodolistControllerImpl)))

var repositorySet = wire.NewSet(repository.New, wire.Bind(new(repository.TodolistRepository), new(*repository.TodolistRepositoryImpl)))
